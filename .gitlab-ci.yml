stages:
  - scan
  - build
### Scan ###
sonarqube-check:
  stage: scan
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  tags:
    - cloudinfra-tn-dev
  when: manual

wss-check:
  stage: build
  image:
    name: 10.78.153.14:5000/gitlab-wss-py-3.6:v1.0
    entrypoint: [""]
  script:
    - cp -r ${CI_PROJECT_DIR} /usr/src/workspace/ASUS_OSS/SourceCode
    - cd /usr/src/workspace/ASUS_OSS
    - ./scan_linux.sh ${CI_PROJECT_NAME}
    - line=$(head -n 1 "./value.dat")
    - if [[ "$line" -eq 254 ]]; then exit 1; else echo "normal_exit"; fi
  allow_failure: true
  tags:
   - cloudinfra-tn-dev
  when: manual
